local currently_enabled = nil
local unloader = function(enab)
	if enab ~= nil then
		msg.post(enab, 'unload')
	end
end
local load_and_enable = function(lev, enab)
	unloader(enab)
	msg.post(lev, 'load')
	msg.post(lev, 'enable')
	currently_enabled = lev
end

function init(self)
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	msg.post('.', 'acquire_input_focus')
	self.funcs = {
		{
			hash('load_start_menu'),
			function()
				previous_level = nil
				local level = 'level_selector#main_menu'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_entrance'),
			function()
				local level = 'level_selector#dungeon_entrance'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_level_1'),
			function()
				local level = 'level_selector#dungeon_learning_1'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_level_2'),
			function()
				local level = 'level_selector#dungeon_learning_2'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_level_3'),
			function()
				local level = 'level_selector#dungeon_learning_3'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_level_4'),
			function()
				local level = 'level_selector#dungeon_learning_4'
				load_and_enable(level, currently_enabled)
			end
		},{
			hash('load_dungeon_maze_1'),
			function()
				local level = 'level_selector#dungeon_maze_1'
				load_and_enable(level, currently_enabled)
			end
		}
	}
	self.funcs[1][2]()
end

function on_message(self, message_id, message, sender)
	for i, v in ipairs(self.funcs) do
		if v[1] == message_id then v[2]() end
	end
end